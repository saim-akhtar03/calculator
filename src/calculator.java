
import static java.lang.Double.parseDouble;
import static java.lang.Integer.parseInt;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author saim akhtar khan
 */
public class calculator extends javax.swing.JFrame {
    public boolean decimal = true;
    public boolean add = false;
    public boolean min = false;
    public boolean mul = false;
    public boolean dev = false;
    public boolean dod=false;
    public boolean clearb= true;
    public int a=0;
    public double b=0;
    public int c=1;
    public double d=1;
    

    /**
     * Creates new form calculator
     */
    public calculator() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton7 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        screen = new javax.swing.JTextField();
        two = new javax.swing.JButton();
        three = new javax.swing.JButton();
        plus = new javax.swing.JButton();
        four = new javax.swing.JButton();
        one = new javax.swing.JButton();
        six = new javax.swing.JButton();
        five = new javax.swing.JButton();
        minus = new javax.swing.JButton();
        seven = new javax.swing.JButton();
        eight = new javax.swing.JButton();
        nine = new javax.swing.JButton();
        plusminus = new javax.swing.JButton();
        multiply = new javax.swing.JButton();
        zero = new javax.swing.JButton();
        dot = new javax.swing.JButton();
        equals = new javax.swing.JButton();
        devide = new javax.swing.JButton();
        clear = new javax.swing.JButton();

        jButton7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton7.setForeground(new java.awt.Color(102, 102, 102));
        jButton7.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "calculator", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 13))); // NOI18N

        screen.setEditable(false);
        screen.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        screen.setForeground(new java.awt.Color(51, 51, 51));

        two.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        two.setForeground(new java.awt.Color(102, 102, 102));
        two.setText("2");
        two.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twoActionPerformed(evt);
            }
        });

        three.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        three.setForeground(new java.awt.Color(102, 102, 102));
        three.setText("3");
        three.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                threeActionPerformed(evt);
            }
        });

        plus.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        plus.setForeground(new java.awt.Color(102, 102, 102));
        plus.setText("+");
        plus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusActionPerformed(evt);
            }
        });

        four.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        four.setForeground(new java.awt.Color(102, 102, 102));
        four.setText("4");
        four.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fourActionPerformed(evt);
            }
        });

        one.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        one.setForeground(new java.awt.Color(102, 102, 102));
        one.setText("1");
        one.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oneActionPerformed(evt);
            }
        });

        six.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        six.setForeground(new java.awt.Color(102, 102, 102));
        six.setText("6");
        six.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sixActionPerformed(evt);
            }
        });

        five.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        five.setForeground(new java.awt.Color(102, 102, 102));
        five.setText("5");
        five.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fiveActionPerformed(evt);
            }
        });

        minus.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        minus.setForeground(new java.awt.Color(102, 102, 102));
        minus.setText("-");
        minus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusActionPerformed(evt);
            }
        });

        seven.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        seven.setForeground(new java.awt.Color(102, 102, 102));
        seven.setText("7");
        seven.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sevenActionPerformed(evt);
            }
        });

        eight.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        eight.setForeground(new java.awt.Color(102, 102, 102));
        eight.setText("8");
        eight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eightActionPerformed(evt);
            }
        });

        nine.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        nine.setForeground(new java.awt.Color(102, 102, 102));
        nine.setText("9");
        nine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nineActionPerformed(evt);
            }
        });

        plusminus.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        plusminus.setForeground(new java.awt.Color(102, 102, 102));
        plusminus.setText("+/-");
        plusminus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusminusActionPerformed(evt);
            }
        });

        multiply.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        multiply.setForeground(new java.awt.Color(102, 102, 102));
        multiply.setText("*");
        multiply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiplyActionPerformed(evt);
            }
        });

        zero.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        zero.setForeground(new java.awt.Color(102, 102, 102));
        zero.setText("0");
        zero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zeroActionPerformed(evt);
            }
        });

        dot.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        dot.setForeground(new java.awt.Color(102, 102, 102));
        dot.setText(".");
        dot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dotActionPerformed(evt);
            }
        });

        equals.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        equals.setForeground(new java.awt.Color(102, 102, 102));
        equals.setText("=");
        equals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equalsActionPerformed(evt);
            }
        });

        devide.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        devide.setForeground(new java.awt.Color(102, 102, 102));
        devide.setText("/");
        devide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                devideActionPerformed(evt);
            }
        });

        clear.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        clear.setForeground(new java.awt.Color(102, 102, 102));
        clear.setText("C");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(four, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(five, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(six, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(one, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(two, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(three, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(plus, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(minus, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(seven, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(eight, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(nine, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(multiply, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(zero, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(dot, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(devide, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(11, 11, 11)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(plusminus, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(equals, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(screen, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(screen, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(two, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(three, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(plus, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(one, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(four, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(six, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(five, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minus, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(seven, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eight, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nine, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(multiply, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(zero, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dot, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(devide, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(plusminus, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(equals, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void equalsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equalsActionPerformed
        if(add&&!screen.getText().equals("")){
            if(!dod){
            int value= parseInt(screen.getText());
            
            a =a+value;
            screen.setText(String.valueOf(a));
            b=a;
        }
            else if(dod){
            double value= parseDouble(screen.getText());
            if(b%value==0){
                a=(int) b;
                a=(int)(a+value);
                screen.setText(String.valueOf(a));
            }
            else{
            b=b+value;
             screen.setText(String.valueOf(b));
            }
        }  
        }
         else if(min&&!screen.getText().equals("")){
  
            if(!dod){
            int value= parseInt(screen.getText());
            if(a==0){
                a=value;
            }
            else{
            a =a-value;
            }
            screen.setText(String.valueOf(a));
            b=a;
        }
            else if(dod){
            double value= parseDouble(screen.getText());
            if(b==0){
               b=value;
               screen.setText(String.valueOf(b));
            }
            else{
           if(b%value==0){
                a= (int) b;
                a=(int)(a-value);
                screen.setText(String.valueOf(a));
            }
            else{
            b=b-value;
             screen.setText(String.valueOf(b));
            }
            }
     
             

                
        }
         }
       
         
         else if(mul&&!screen.getText().equals("")){
            if(!dod){
            int value= parseInt(screen.getText());
            if(a==0){
                a=value;
            }
            else{
            a =a*value;
            }
            screen.setText(String.valueOf(a));
            b=a;
        }
            else if(dod){
            double value= parseDouble(screen.getText());
            if(b==0){
                b=value;
                screen.setText(String.valueOf(b));
            }
            else{
           if(b%value==0){
                a=(int) b;
                a=(int)(a*value);
                screen.setText(String.valueOf(a));
            }
           else{
               b=b*value;
                screen.setText(String.valueOf(b));
           }
            }
             
             
        
                
        }
         }
       
          else if(dev&&!screen.getText().equals("")){
            if(!dod){
            int value= parseInt(screen.getText());
            if(a==0){
              
                screen.setText(String.valueOf(a));
            }
            else{
                if(a%value==0){
                 a =a/value;
                    System.out.println(a);
                 screen.setText(String.valueOf(a));
                }
                else{
                    b=a;
                   double value1=value;
                    b=b/value1;
                    decimal=true;
                    dod=true;
                    System.out.println(b);
                    screen.setText(String.valueOf(b));
                }
            }
            
           
        }
            else if(dod){
            double value= parseDouble(screen.getText());
            if(b==0){
                b=value;
              screen.setText(String.valueOf(b));
            }
            else{
           if(b%value==0){
                a=(int) b;
                a=(int)(a/value);
                screen.setText(String.valueOf(a));
            }
            else{
            b=b/value;
             screen.setText(String.valueOf(b));
            }
            }
       
                
        }
         }
       
          
            else{
                if(dod){
                    screen.setText(String.valueOf(a));
                }
                else{
                screen.setText(String.valueOf(b));
            }
            }
        decimal=false;
        add=false;
        min=false;
        dev=false;
        mul=false;
        clearb=true;
        
    }//GEN-LAST:event_equalsActionPerformed

    private void devideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_devideActionPerformed
            if(mul&&!screen.getText().equals("")){
            if(!dod){
            int value= parseInt(screen.getText());
            if(a==0){
                a=value;
            }
            else{
            a =a*value;
            }
            b=a;
        }
            else if(dod){
            double value= parseDouble(screen.getText());
            if(b==0){
                b=value;
            }
            else{
            b=b*value;
            }
             
          
        }  
              mul=false;
            screen.setText("");
     }
        if(add&&!screen.getText().equals("")){
            if(!dod){
            int value= parseInt(screen.getText());
            
            a =a+value;
             b=a;
        }
            else if(dod){
            double value= parseDouble(screen.getText());
            b=b+value;
           
        }  
            add=false;
            screen.setText("");
           
        }
              
              
              
              else if(min&&!screen.getText().equals("")){
            if(!dod){
            int value= parseInt(screen.getText());
            if(a==0){
                a=value;
            }
            else{
            a =a-value;
            }
            b=a;
        }
            else if(dod){
            double value= parseDouble(screen.getText());
            if(b==0){
                b=value;
            }
            else{
            b=b-value;
            }
             
         
        }  
               min=false;
            screen.setText("");
     }
          
          
 
        else if(!dod&&!screen.getText().equals("")){
            int value= parseInt(screen.getText());
            if(!clearb){
                if(a%value==0){
            a =a/value;
                }
                else{
                    b=a;
                    double value1=value;
                    b=b/value1;
                    screen.setText(String.valueOf(b));
                    decimal=true;
                    dod=true;
                }
            }
            else{
                a=value;
                 screen.setText(String.valueOf(a));
            }
           
            dev=true;
            b=a;
            
        }
        else if(dod&&!screen.getText().equals("")){
            double value= parseDouble(screen.getText());
           if(!clearb){
            b =b/value;
            }
            else{
                b=value;
            }
            dev=true;
         
        }        // TODO add your handling code here:

         screen.setText("");
         
     decimal=true;
     add=false;
     mul=false;
     min=false;
     clearb=false;
     dev=true;        // TODO add your handling code here:
    }//GEN-LAST:event_devideActionPerformed

    private void plusminusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusminusActionPerformed
        if(decimal){
            int value= parseInt(screen.getText());
            value=-1*value;
            screen.setText(String.valueOf(value));
        }
         if(!decimal){
            double value= parseDouble(screen.getText());
            value =-1*value;
            screen.setText(String.valueOf(value));
        }
    }//GEN-LAST:event_plusminusActionPerformed

    private void oneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oneActionPerformed
      screen.setText(screen.getText()+one.getText());
    }//GEN-LAST:event_oneActionPerformed

    private void twoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twoActionPerformed
        screen.setText(screen.getText()+two.getText());
    }//GEN-LAST:event_twoActionPerformed

    private void threeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_threeActionPerformed
 screen.setText(screen.getText()+three.getText());        // TODO add your handling code here:
    }//GEN-LAST:event_threeActionPerformed

    private void fourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fourActionPerformed
 screen.setText(screen.getText()+four.getText());        // TODO add your handling code here:
    }//GEN-LAST:event_fourActionPerformed

    private void fiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fiveActionPerformed
 screen.setText(screen.getText()+five.getText());        // TODO add your handling code here:
    }//GEN-LAST:event_fiveActionPerformed

    private void sixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sixActionPerformed
         screen.setText(screen.getText()+six.getText());
    }//GEN-LAST:event_sixActionPerformed

    private void sevenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sevenActionPerformed
 screen.setText(screen.getText()+seven.getText());        // TODO add your handling code here:
    }//GEN-LAST:event_sevenActionPerformed

    private void eightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eightActionPerformed
 screen.setText(screen.getText()+eight.getText());        // TODO add your handling code here:
    }//GEN-LAST:event_eightActionPerformed

    private void nineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nineActionPerformed
 screen.setText(screen.getText()+nine.getText());        // TODO add your handling code here:
    }//GEN-LAST:event_nineActionPerformed

    private void zeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zeroActionPerformed
 screen.setText(screen.getText()+zero.getText());        // TODO add your handling code here:
    }//GEN-LAST:event_zeroActionPerformed

    private void dotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dotActionPerformed
   if(decimal){
       if(screen.getText().equals("")){
           screen.setText("0.");
            decimal = false;
       }
       else{
        screen.setText(screen.getText()+dot.getText()); 
        decimal = false;
        
 }// TODO add your handling code here:
   }
   dod=true;
  
    }//GEN-LAST:event_dotActionPerformed

    private void plusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusActionPerformed
                if(dev&&!screen.getText().equals("")){
            if(!dod){
            int value= parseInt(screen.getText());
            if(a==0){
                a=value;
            }
            else{
                if(a%value==0){
            a =a/value;
            b=a;
                }
                else{
                    b=a;
 
                    double value1=value;
                    b=b/value;
                    dod=true;
                    decimal=true;

                }
            }
        }
            else if(dod){
            double value= parseDouble(screen.getText());
            if(b==0){
                b=value;
            }
            else{
            b=b/value;
            }
          
        } 
               
            dev=false;
            screen.setText("");
     }
                
                
        if(dev&&!screen.getText().equals("")){
            if(!dod){
            int value= parseInt(screen.getText());
            if(a==0){
                a=value;
            }
            else{
            a =a/value;
            }
            b=a;
        }
            else if(dod){
            double value= parseDouble(screen.getText());
            if(b==0){
                b=value;
            }
            else{
            b=b/value;
            }
             
            
        } 
            dev=false;
            screen.setText("");
     }
            
            
        if(mul&&!screen.getText().equals("")){
            if(!dod){
            int value= parseInt(screen.getText());
            if(a==0){
                a=value;
            }
            else{
            a =a*value;
            }
            b=a;
        }
            else if(dod){
            double value= parseDouble(screen.getText());
            if(b==0){
                b=value;
            }
            else{
            b=b*value;
            }
             
            
        }  
            mul=false;
            screen.setText("");
           
     }

        if(min&&!screen.getText().equals("")){
            if(!dod){
            int value= parseInt(screen.getText());
            if(a==0){
                a=value;
            }
            else{
            a =a-value;
            }
            b=a;
        }
            else if(dod){
            double value= parseDouble(screen.getText());
            if(b==0){
                b=value;
            }
            else{
            b=b-value;
            }
             
         
        }
               min=false;
            screen.setText("");
     }
     
     
      if(dod==false&&!screen.getText().equals("")){
            int value= parseInt(screen.getText());
            a =a+value;
            screen.setText(String.valueOf(value));
            add=true;
            b=a;
        }
        else if(dod==true&&!screen.getText().equals("")){
            double value= parseDouble(screen.getText());
            b=b+value;
            screen.setText(String.valueOf(value));
            add=true;
         
        }        // TODO add your handling code here:
      
        screen.setText("");
        
         
     decimal=true;
     min=false;
     dev=false;
     mul=false;
     clearb=false;
     add=true;
    }//GEN-LAST:event_plusActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
   a=0;
   b=0;
   c=0;
   screen.setText("");
decimal=true;// TODO add your handling code here:
dod=false;
clearb=true;
    }//GEN-LAST:event_clearActionPerformed

    private void minusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusActionPerformed
             if(dev&&!screen.getText().equals("")){
            if(!dod){
            int value= parseInt(screen.getText());
            if(a==0){
                a=value;
            }
            else{
                if(a%value==0){
            a =a/value;
            b=a;
                }
                else{
                    b=a;
                 
                    double value1=value;
                    b=b/value;
                    dod=true;
                    decimal=true;
                  
                }
            }
        }
            else if(dod){
            double value= parseDouble(screen.getText());
            if(b==0){
                b=value;
            }
            else{
            b=b/value;
            }
          
        } 
               
            dev=false;
            screen.setText("");
     }       
                 
        if(mul&&!screen.getText().equals("")){
            if(!dod){
            int value= parseInt(screen.getText());
            if(a==0){
                a=value;
            }
            else{
            a =a*value;
            }
            b=a;
        }
            else if(dod){
            double value= parseDouble(screen.getText());
            if(b==0){
                b=value;
            }
            else{
            b=b*value;
            }
             
          
            
        } 
              mul=false;
            screen.setText("");
     }
     
     
       if(add&&!screen.getText().equals("")){
            if(!dod){
            int value= parseInt(screen.getText());
            
            a =a+value;
            b=a;
        }
            else if(dod){
            double value= parseDouble(screen.getText());
            b=b+value;
           
        }  
            add=false;
           screen.setText("");
        }
  
        else if(!dod&&!screen.getText().equals("")){
            int value= parseInt(screen.getText());
            if(!clearb){
            a =a-value;
             
            }
            else{
                a=value;
            }
            screen.setText(String.valueOf(value));
            min=true;
            b=a;
            
        }
        else if(dod&&!screen.getText().equals("")){
            double value= parseDouble(screen.getText());
           if(!clearb){
            b =b-value;
            }
            else{
                b=value;
            }
            min=true;
         
        }        // TODO add your handling code here:
         screen.setText("");
         
     decimal=true;
     add=false;
     dev=false;
     mul=false;
     clearb=false;
     min=true;
  
    }//GEN-LAST:event_minusActionPerformed

    private void multiplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiplyActionPerformed
             if(dev&&!screen.getText().equals("")){
            if(!dod){
            int value= parseInt(screen.getText());
            if(a==0){
                a=value;
            }
            else{
                if(a%value==0){
            a =a/value;
            b=a;
                }
                else{
                    b=a;
               
                    double value1=value;
                    b=b/value;
                    dod=true;
                    decimal=true;
                   
                }
            }
        }
            else if(dod){
            double value= parseDouble(screen.getText());
            if(b==0){
                b=value;
            }
            else{
            b=b/value;
            }
          
        } 
               
            dev=false;
            screen.setText("");
     }
                         
                         
        if(add&&!screen.getText().equals("")){
            if(!dod){
            int value= parseInt(screen.getText());
            
            a =a+value;
             b=a;
        }
            else if(dod){
            double value= parseDouble(screen.getText());
            b=b+value;
           
        }  
            add=false;
             screen.setText("");
           
        }
              
              
              
              else if(min&&!screen.getText().equals("")){
            if(!dod){
            int value= parseInt(screen.getText());
            if(a==0){
                a=value;
            }
            else{
            a =a-value;
            }
            b=a;
        }
            else if(dod){
            double value= parseDouble(screen.getText());
            if(b==0){
                b=value;
            }
            else{
            b=b-value;
            }
             
            min=false;
           
        }  
             screen.setText("");
     }
          
          
 
        else if(!dod&&!screen.getText().equals("")){
            int value= parseInt(screen.getText());
            if(!clearb){
            a =a*value;
              
            }
            else{
                a=value;
            }
            screen.setText(String.valueOf(value));
            mul=true;
            b=a;
            
        }
        else if(dod&&!screen.getText().equals("")){
            double value= parseDouble(screen.getText());
           if(!clearb){
            b =b*value;
            }
            else{
                b=value;
            }
            mul=true;
         
        }        // TODO add your handling code here:
     
         screen.setText("");
         
     decimal=true;
     add=false;
     dev=false;
     min=false;
     clearb=false;
     mul=true; // TODO add your handling code here:
    }//GEN-LAST:event_multiplyActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
            
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new calculator().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clear;
    private javax.swing.JButton devide;
    private javax.swing.JButton dot;
    private javax.swing.JButton eight;
    private javax.swing.JButton equals;
    private javax.swing.JButton five;
    private javax.swing.JButton four;
    private javax.swing.JButton jButton7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton minus;
    private javax.swing.JButton multiply;
    private javax.swing.JButton nine;
    private javax.swing.JButton one;
    private javax.swing.JButton plus;
    private javax.swing.JButton plusminus;
    private javax.swing.JTextField screen;
    private javax.swing.JButton seven;
    private javax.swing.JButton six;
    private javax.swing.JButton three;
    private javax.swing.JButton two;
    private javax.swing.JButton zero;
    // End of variables declaration//GEN-END:variables
}
